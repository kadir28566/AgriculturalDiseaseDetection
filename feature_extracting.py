# -*- coding: utf-8 -*-
"""Feature_Extracting.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bysPejQ07RLHkVDH2kM_9pZhubZetZyZ
"""

import cv2 as cv
import numpy as np
from skimage.feature import graycomatrix, graycoprops
import os

def extract_color_features(image):

  #rgb

  color_features = cv.mean(image)[:3]

  #hsv

  hsv_images = cv.cvtColor(image, cv.COLOR_BGR2HSV)
  hsv_features = cv.mean(hsv_images)[:3]

  return np.concatenate([color_features, hsv_features])

#doku özellikleri

def extract_glcm_features(image):
  gray = cv.cvtColor(image, cv.COLOR_BGR2GRAY)
  glcm = graycomatrix(gray, [1], [0, np.pi/4, np.pi/2, 3*np.pi/4])
  contrast = graycoprops(glcm, 'contrast')
  dissimilarity = graycoprops(glcm, 'dissimilarity')
  homogeneity = graycoprops(glcm, 'homogeneity')
  energy = graycoprops(glcm, 'energy')
  correlation = graycoprops(glcm, 'correlation')

  return np.concatenate([contrast, dissimilarity, homogeneity, energy, correlation], axis=0)

#kenar özellikleri

def extract_edge_features(image):
  gray = cv.cvtColor(image, cv.COLOR_BGR2GRAY)
  edges = cv.Canny(gray, 100, 200)
  edge_density = np.mean(edges/255.0)
  return edge_density

#tüm özellikleri tek fonksiyonda çağırma

def extract_all_features(image):
  color_features = extract_color_features(image)
  glcm_features = extract_glcm_features(image)
  edge_features = extract_edge_features(image)

  color_features = np.ravel(color_features)
  glcm_features = np.ravel(glcm_features)
  edge_features = np.ravel(edge_features)

  return np.concatenate([color_features, glcm_features, edge_features])

def process_dataset(dataset_path):

  features = []
  labels = []

  for class_name in os.listdir(dataset_path):
    class_path = os.path.join(dataset_path, class_name)

    if os.path.isdir(class_path):
      for image_name in os.listdir(class_path):
        image_path = os.path.join(class_path,image_name)
        image = cv.imread(image_path)

        if image is not None:
          image_features = extract_all_features(image)
          features.append(image_features)
          labels.append(class_name)
  return np.array(features), np.array(labels)

dataset_path = "/content/drive/MyDrive/Apple"
X, y = process_dataset(dataset_path)
print("Özellik matrisinin boyutu: ", X.shape)
print("Etiket vektörünün boyutu: ", y.shape)

